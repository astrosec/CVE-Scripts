<<<<<<< HEAD
FROM mongo:latest

RUN apt-get update && apt-get upgrade -y

ENV CVE_BASE=/opt/cve-search
ENV PATH=${PATH}:${CVE_BASE}/bin

ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && \
	apt-get install -y \
		curl \
		python3 \
		python3-pip \
		python3-dev \
		pkg-config \
		vim \
		software-properties-common \
		git \
		libxml2-dev \
		libxslt1-dev \
		zlib1g-dev \
#		libffi6 \
		build-essential \
		libssl-dev \
		libffi-dev \
		python3-wheel \
		python3-setuptools \
#		redis-server \
		net-tools \
		gcc \
		patch \
		wget \
                gosu 
#		mongodb
#RUN mv /home/user/cve-docker/cve/docker-entrypoint.sh /usr/local/bin/mongo-entrypoint.sh
#RUN mv /usr/local/bin/docker-entrypoint.sh /usr/local/bin/mongo-entrypoint.sh
#RUN rm /entrypoint.sh
RUN apt-get install -y apt-transport-https ca-certificates
RUN cd $(dirname ${CVE_BASE}) && git clone https://github.com/astrosec/cve-search.git
RUN xargs apt-get install -y < ${CVE_BASE}/requirements.system
RUN pip3 install -r ${CVE_BASE}/requirements.txt
RUN pip3 install -r ${CVE_BASE}/requirements-dev.txt
RUN xargs apt-get install -y < ${CVE_BASE}/requirements.prod
#RUN pip3 install -r ${CVE_BASE}/docs/source/requirements.txt
RUN cat requirements.system requirements.prod | xargs apt-get install -y
RUN echo "deb http://security.ubuntu.com/ubuntu impish-security main" | tee /etc/apt/sources.list.d/impish-security.list apt-get update apt-get install libssl1.1
RUN wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add -
RUN echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-4.4.list
#RUN apt-get -y update
#RUN rm -rf /var/lib/apts/lists/*
RUN cd ${CVE_BASE} && sed 's/Host: 127.0.0.1/Host: 0.0.0.0/' etc/configuration.ini.sample > etc/configuration.ini
EXPOSE 5000
#COPY ./docker-entrypoint.sh .
ADD docker-entrypoint.sh /usr/local/bin/cvedb
ADD mongo-entrypoint.sh /usr/local/bin/mongo-entrypoint.sh

RUN chmod +x /usr/local/bin/cvedb 
RUN chmod +x /usr/local/bin/mongo-entrypoint.sh
RUN mkdir -p /data/configdb
RUN mkdir -p /data/db

ENTRYPOINT ["/bin/bash"]
#ENTRYPOINT ["cvedb"]
#CMD ["-u", " -w"]
=======
FROM mongo:3.4
ENV CVE_BASE=/opt/cve-search
ENV PATH=${PATH}:${CVE_BASE}/bin
RUN apt-get update
RUN apt-get install -y --no-install-recommends apt-transport-https ca-certificates
RUN apt-get install -y --no-install-recommends -y --no-install-recommends curl
RUN curl -s 'https://www.dotdeb.org/dotdeb.gpg' | apt-key add -
RUN echo "deb http://mirrors.teraren.com/dotdeb/ jessie all"  > /etc/apt/sources.list.d/dotdeb.list
#RUN echo "deb http://mirrors.teraren.com/dotdeb/ stable all" > /etc/apt/sources.list.d/dotdeb.list
#RUN echo "deb-src http://mirrors.teraren.com/dotdeb/ stable all" > /etc/apt/sources.list.d/dotdeb.list
#RUN echo "deb https://packages.dotdeb.org/dists/jessie/all/debian-installer/binary-i386/ all" > /etc/apt/sources.list.d/dotdeb.list
#Doing update causes a NOSPLIT error from teraren
RUN apt-get -y upgrade
#RUN apt-get update && apt-get -y upgrade
RUN apt-get install -y --no-install-recommends openssh-client
RUN apt-get install -y --no-install-recommends git
RUN apt-get install -y --no-install-recommends iputils-ping
RUN apt-get install -y --no-install-recommends vim
RUN apt-get install -y --no-install-recommends net-tools
RUN apt-get install -y --no-install-recommends patch
RUN apt-get install -y --no-install-recommends python3
RUN apt-get install -y --no-install-recommends python3-pip
RUN apt-get install -y --no-install-recommends python3-lxml
RUN apt-get install -y --no-install-recommends python3-dev
RUN apt-get install -y --no-install-recommends python-pip
RUN apt-get install -y --no-install-recommends gcc
#Manually getting missing modules since i think theirs a read file problem due to the enters in the requirements 
RUN apt-get install -y --no-install-recommends redis-server
RUN mv /usr/local/bin/docker-entrypoint.sh /usr/local/bin/mongo-entrypoint.sh
RUN rm /entrypoint.sh
#RUN python3 -m pip install --upgrade pip setuptools wheel
run python3 -m pip install --upgrade pip
RUN apt-get upgrade && \
	apt-get install -y "pip < 21.0"
RUN apt-get upgrade && \
	apt-get install -y python3-setuptools
RUN apt-get upgrade && \
	apt-get install -y python3-wheel
RUN cd $(dirname ${CVE_BASE}) && git clone https://github.com/astrosec/cve-search.git
RUN pip3 install -r {CVE_BASE}/requirements.txt
RUN apt-get autoremove -y python3-dev gcc
RUN rm -rf /var/lib/apt/lists/*
ADD docker-entrypoint.sh /usr/local/bin/cvedb
RUN cd $CVE_BASE && sed 's/Host: 127.0.0.1/Host: 0.0.0.0/'  etc/configuration.ini.sample  > etc/configuration.ini
EXPOSE 5000
ENTRYPOINT ["cvedb"]
CMD ["-u", "-w"]
>>>>>>> cffaff897ae606a40d12aacc8bfd6e2001b15773
