import re
import requests
import json
import csv
from urllib.error import HTTPError

f = open("output-deps.txt")

#format of the request https://cve.circl.lu/api/cvefor/cpe:/a:.*:openssh:4.7p1
vuln = "https://cve.circl.lu/api/cvefor/cpe:/a:.*:zlib:1.2.1"

                                        #cpe:2.3:o:gemteks:wrtm-127acn_firmware:01.01.02.141:*:*:*:*:*:*:*
                                        #cpe:2.3:a:zlib:zlib:1.2.1:*:*:*:*:*:*:*
                                        #cpe:2.3:a:zlib:zlib:1.0.3:*:*:*:*:*:*:*
                                        #cpe:/a:zlib:zlib:1.2.1

#for testing
list = ["sqlite-autoconf-3250300.tar.gz", "tornado-5.1.1.tar.gz", "uboot-1.4.tar.gz", "u-boot-2018.07.tar.bz2", "urllib3-1.24.2.tar.gz", "util-linux-2.33.tar.xz", "vim-v8.1.0133.tar.gz", "Werkzeug-0.12.2.tar.gz", "zeromq-4.3.1.tar.gz", "zlib-1.2.11.tar.xz", "jackshit.1.2.3.tar.gz"]



#for element in list:
with open('cves.csv','w') as csvfile:
    fieldnames = ['component', 'id', 'summary']
    writer = csv.DictWriter(csvfile,fieldnames=fieldnames,dialect='excel')
    writer.writeheader()
    for element in f:
        #print (element.rstrip('\n'))


        y = re.search("(([a-zA-Z0-9]*-)+)",element)
        z = re.search("(([0-9]{1,9}\.)+([0-9]{1,9})+)",element)

        if y:
            package = (y.group(1))
        if z:
            version = (z.group(1))

        formatted_str = '%s:%s' %  (package[:-1], version)
        #print (formatted_str)

        #cve_url ='https://cve.circl.lu/api/cvefor/cpe:/a:%s:%s:%s' % (package[:-1],package[:-1],version)
        cve_url ='http://localhost:5000/api/cvefor/cpe:/a:.*:%s:%s' % (package[:-1],version)
        print (cve_url)

        try:
            response = requests.get(cve_url)
            print (response.status_code)
            if (response.status_code == 200):
                if response.json():
                    for cve_obj in response.json():
                        writer.writerow({'component': formatted_str, 'id': cve_obj['id'], 'summary': cve_obj['summary']})
                        csvfile.flush()
                        print(formatted_str, cve_obj['id'],cve_obj['summary'])
                        print("################################################################################\n")
                else:
                    print("Empty response")
            else:
                print (response.status_code)
        except HTTPError as http_err:
            print("HTTP error: %s" % (http_err))
        except ConnectionError as conn_err:
            print("Connection error: %s" % (conn_err))

